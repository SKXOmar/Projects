public class Queue {
    int Size = 6;
    int items[] = new int[Size];
    int front, rear;
  
    Queue() {
      front = -1;
      rear = -1;
    }
  
    boolean isFull() {
      if (rear == Size - 1) {
        return true;
      }
      return false;
    }
  
    boolean isEmpty() {
      if (front == -1)
        return true;
      else
        return false;
    }
  
    void EnQueue(int element) {
      if (isFull()) {
        System.out.println("queue is fullll");
      } else {
        if (front == -1)
          front = 0;
        rear++;
        items[rear] = element;
        System.out.println("inserted " + element);
      }
    }
  
    int DeQueue() {
      int element;
      if (isEmpty()) {
        System.out.println("queue is emptyy");
        return (-1);
      } else {
        element = items[front];
        if (front >= rear) {
          front = -1;
          rear = -1;
        } 
        else {
          front++;
        }
        System.out.println("deleted -> " + element);
        return (element);
      }
    }
  
    void display() {
      
      int i;
      if (isEmpty()) {
        System.out.println("Empty Queue");
      } else {
        System.out.println("\nFront -> " + front);
        System.out.println("items -> ");
        for (i = front; i <= rear; i++)
          System.out.print(items[i] + "  ");
  
        System.out.println("\nRear -> " + rear);
      }
    }
  
}
